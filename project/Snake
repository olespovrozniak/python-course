from pygame.locals import *
import random
import pygame
import time

STEP = 47
SPEED = 0.1
WWIDTH = 17 * STEP
WHEIGHT = 13 * STEP

class Apple:
    x = 0
    y = 0
    
 
    def __init__(self,x,y):
        self.x = random.randint(1,WWIDTH//STEP-1)*STEP
        self.y = random.randint(1,WHEIGHT//STEP-1)*STEP
 
    def draw(self, surface, image):
        surface.blit(image,(self.x, self.y)) 
 
 
class Player:
    x = [0]
    y = [0]
    direction = 0 #random.randint(0,3)
    
 
    updateCountMax = 2
    updateCount = 0
 
    def __init__(self, length):
       self.length = 3
       for i in range(1,200):
           self.x.append(-100)
           self.y.append(-100)
 
       # initial positions, no collision.
       #self.x[i] = i*STEP
       #self.y[i] = i*STEP
      
    def update(self):
 
        self.updateCount += 1
        if self.updateCount > self.updateCountMax:
 
            # update previous positions
            for i in range(self.length-1,0,-1):
                self.x[i] = self.x[i-1]
                self.y[i] = self.y[i-1]
                self.updateCount = 0        


            # update position of head of snake
            if self.direction == 0:
                self.x[0] = self.x[0] + STEP
            if self.direction == 1:
                self.x[0] = self.x[0] - STEP
            if self.direction == 2:
                self.y[0] = self.y[0] - STEP
            if self.direction == 3:
                self.y[0] = self.y[0] + STEP
 
            self.updateCount = 0
 
 
    def moveRight(self):
        self.direction = 0
 
    def moveLeft(self):
        self.direction = 1
 
    def moveUp(self):
        self.direction = 2
 
    def moveDown(self):
        self.direction = 3 
 
    def draw(self, surface, image):
        for i in range(0,self.length):
            surface.blit(image,(self.x[i],self.y[i])) 
 
class Game:
    def isCollision(self,x1,y1,x2,y2):
        if x1 >= x2 and x1 <= x2 + (STEP-5):
            if y1 >= y2 and y1 <= y2 + (STEP-5):
                return True
        return False
 
class App:
 
    
    player = 0
    apple = 0
 
    def __init__(self):
        self._running = True
        self._display_surf = None
        self._image_surf = None
        self._apple_surf = None
        self.game = Game()
        self.player = Player(3) 
        self.apple = Apple(5,5)
 
    def on_init(self):
        pygame.init()
        self._display_surf = pygame.display.set_mode((WWIDTH,WHEIGHT), pygame.HWSURFACE)
 
        pygame.display.set_caption('Snake')
        self._running = True
        self._image_surf = pygame.image.load("D:\Course\project\pygame.png").convert()
        self._apple_surf = pygame.image.load("D:\Course\project\pygame.png").convert()
 
    # def on_event(self, event):
    #     if event.type == QUIT:
    #         self._running = False
 
    def on_loop(self):
        self.player.update()
 
        # does snake eat apple?
        for i in range(0,self.player.length):
            if self.game.isCollision(self.apple.x,self.apple.y,self.player.x[i], self.player.y[i]):
                self.apple.x = random.randint(1,WWIDTH//STEP-1) * STEP
                self.apple.y = random.randint(1,WHEIGHT//STEP-1) * STEP
                self.player.length = self.player.length + 1
                 
        # does snake collide with itself?
        for i in range(2,self.player.length):
            if self.game.isCollision(self.player.x[0],self.player.y[0],self.player.x[i], self.player.y[i]):
                print("You lose! Collision: ")
                print("x[0] (" + str(self.player.x[0]) + "," + str(self.player.y[0]) + ")")
                print("x[" + str(i) + "] (" + str(self.player.x[i]) + "," + str(self.player.y[i]) + ")")
                #self.on_cleanup()
                pygame.quit()
        
        # does snake going inside thr screen?        
            if int(self.player.x[0]) > WWIDTH:
                self.player.x[0] = 0
            
            if int(self.player.y[0])>WHEIGHT:  
                self.player.y[0] = 0
            
            if int(self.player.x[0]) < 0:
                self.player.x[0] = WWIDTH

            if int(self.player.y[0]) < 0:  
                self.player.y[0] = WHEIGHT
        pass
 
    def on_render(self):
        self._display_surf.fill((120,120,0,255))
        self.player.draw(self._display_surf, self._image_surf)
        self.apple.draw(self._display_surf, self._apple_surf)
        pygame.display.flip()
 
    # def on_cleanup(self):
    #     pygame.quit()
 
    def on_execute(self):
        if self.on_init() == False:
            self._running = False
 
        while( self._running ):
            pygame.event.pump()
            keys = pygame.key.get_pressed() 
 
            if (keys[K_RIGHT]):
                self.player.moveRight()
 
            if (keys[K_LEFT]):
                self.player.moveLeft()
 
            if (keys[K_UP]):
                self.player.moveUp()
 
            if (keys[K_DOWN]):
                self.player.moveDown()
 
            if (keys[K_ESCAPE]):
                self._running = False
 
            self.on_loop()
            self.on_render()
            
            time.sleep (SPEED);
        # self.on_cleanup()
        pygame.quit()
if __name__ == "__main__" :
    theApp = App()
    theApp.on_execute()